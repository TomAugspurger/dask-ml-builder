env:
    global:
        - REPO_DIR=dask-ml
        # Commit from your-project that you want to build
        - BUILD_COMMIT=v0.2.2
        # pip dependencies to _build_ your project
        - BUILD_DEPENDS="Cython numpy setuptools_scm"
        # pip dependencies to _test_ your project.  Include any dependencies
        # that you need, that are also specified in BUILD_DEPENDS, this will be
        # a separate install.
        - TEST_DEPENDS="dask distributed numpy pandas scikit-learn scipy dask-glm dask-searchcv pytest pytest-mock"
        - PLAT=x86_64
        - UNICODE_WIDTH=32
        - ANACONDA_USERNAME=taugspurger
        - secure: "sRgnytE0CTsXdI/DkVxjbDnJHbGeIIxrcqqE1Yy51UNIBHmjRNvTOOwz1eEluh6cmMwjXz+X6yeg4lU5m4fLWXHZ/N2yUuMdBmol24O55AGIVuX33pZ9+fiH7spVaNI8N7OS9SUwTbXd+6ygPNnCJ2gyoDxsUgMqMnHRPfjnQTwm6gGIDkTmab7adNhJuDZGaKAdTnvUYs3AAifkMKly3Pa8Xus/aeD+PPcGU/d4TUEr+dSGQ5QGIL9MuUL746H91cZRBdDO855yy1Z99jmJ49IX89tGvkfQQ+AyW3+qmOr4QgQ8o5VFX5MoOGwI3zeBVgGUXE3Eo/QzCw1AiVLjwtr4Uo80VtffYSKVRHAAfDlyL51VhpJrc2X0uvJjUUrRFX2tGnN6qJBhAwfJW6s+CBRW+1bcNkaqrelfr1Fr6bJ/723RK1EEe8oLWQ2UANBr0lgQUgqzaBxB3OOznxbTbdimFVecp6W0/nNU9boqhCLf36GH6eyeLPVXNZz/3YypKOMk26BADauIVKMhziRS9cNQzuP/2DN4x3kOguU0g4BnkDr7syaDNrwIDeGwnlTAwZXnvCGLeb51//0gYFHL7E+s2iBYERtVkoFb7slt7KrVxcRnTgrdXZkb7vdlzqDuCYkVGOD28exV1yZT5thQGrn5pBJgGYmER3U1XNXeq70="

language: python
# The travis Python version is unrelated to the version we build and test
# with.  This is set with the MB_PYTHON_VERSION variable.
python: 3.5
sudo: required
dist: trusty
services: docker

matrix:
  exclude:
    # Exclude the default Python 3.5 build
    - python: 3.5
  include:
    - os: linux
      env: MB_PYTHON_VERSION=2.7
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - UNICODE_WIDTH=16
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=i686
        - UNICODE_WIDTH=16
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.5
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.5
        - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
        - PLAT=i686
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=2.7
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.5
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.6

before_install:
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - before_install

install:
    # Maybe get and clean and patch source
    - clean_code $REPO_DIR $BUILD_COMMIT
    - build_wheel $REPO_DIR $PLAT

script:
    - install_run $PLAT

after_success:
    # Upload wheels to Rackspace container
    - |
      if [ "${TRAVIS_OS_NAME}" == "osx" ]; then
          wget -q http://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh
      else
          wget -q http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
      fi
    - bash miniconda.sh -b -p "$HOME/miniconda3"
    - export PATH="$HOME/miniconda3/bin:$PATH"
    - conda install anaconda-client -q -y
    - anaconda -t ${MY_UPLOAD_KEY} upload -u TomAugspurger --force ${TRAVIS_BUILD_DIR}/wheelhouse/*
