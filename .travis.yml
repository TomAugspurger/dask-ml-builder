env:
    global:
        - REPO_DIR=dask-ml
        # Commit from your-project that you want to build
        - BUILD_COMMIT=HEAD
        # pip dependencies to _build_ your project
        - BUILD_DEPENDS="Cython numpy setuptools_scm"
        # pip dependencies to _test_ your project.  Include any dependencies
        # that you need, that are also specified in BUILD_DEPENDS, this will be
        # a separate install.
        - TEST_DEPENDS="dask distributed numpy pandas scikit-learn scipy dask-glm dask-searchcv pytest pytest-mock"
        - PLAT=x86_64
        - UNICODE_WIDTH=32
        - ANACONDA_USERNAME=taugspurger
        - secure: "Hv8HNUHtS4T3m3r07QlUVcb/0/fHMvD/zk527jkJyPaU2Ik4idNtg/bnusKNwaBM1a3d80WaChry2yP5h3iceaDvVhvLgX758Cm4xhh9wgli8oVUlOvPtA+CAKaFteCZ1wnjtprTv8pLNDDC1C9U2otybeGOC4it1RrwW0tm9rM9sFt+zVXL1sbO1YwJxhHagUUcb1RYdKJa8zUEi5pmwF/INWRNIQK47H6MDoCRRj42DvWy1Pd6OIwxU6NzDKgoGkzeqBXaA/yutWyEx+fNlza5zb5O7ezaMIdNJuxbZ1WCGZuuoIQa5u4QJKggXopQC9Nd54V7mAREqi3y2uh7CMq0Y/kEfKDQ+rG/qm36TFnW82qCBYDHhupboqfKVaJVXJTB3WcFP2vl8qTxNg81UxR6+w0BoLNMwklqxykh212R2XJ457197Kd8jcPQ2l1SHcU6dVNygDf7y3SG+t+QTx0gDXy4ZYF8i8r99X3JMNYiHl2ky1YqspN3Yk4lciCLaUH8iXZpltcuqQWvyBA0yR7vJT5VcIk9z3mO3EBTdRQ+R9beNgkn8d5lybAupCN1HA3ldgY4Fs8s/M9ZUBJ9gLJSyqQI2+6D0uEKJA1DNsrLRXYrByzLytnw5YCAaOcEduXXi5uTh9452KsBqG7yqHgPKG2h6iLxhX4Qhww54Ug="

language: python
# The travis Python version is unrelated to the version we build and test
# with.  This is set with the MB_PYTHON_VERSION variable.
python: 3.5
sudo: required
dist: trusty
services: docker

matrix:
  exclude:
    # Exclude the default Python 3.5 build
    - python: 3.5
  include:
    # - os: linux
    #   env: MB_PYTHON_VERSION=2.7
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=2.7
    #     - UNICODE_WIDTH=16
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=2.7
    #     - PLAT=i686
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=2.7
    #     - PLAT=i686
    #     - UNICODE_WIDTH=16
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.5
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.5
    #     - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.6
    #     - PLAT=i686
    # - os: osx
    #   language: generic
    #   env:
    #     - MB_PYTHON_VERSION=2.7
    # - os: osx
    #   language: generic
    #   env:
    #     - MB_PYTHON_VERSION=3.5
    # - os: osx
    #   language: generic
    #   env:
    #     - MB_PYTHON_VERSION=3.6

before_install:
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - before_install

install:
    # Maybe get and clean and patch source
    - clean_code $REPO_DIR $BUILD_COMMIT
    - build_wheel $REPO_DIR $PLAT

script:
    - install_run $PLAT

after_success:
    # Upload wheels to Rackspace container
    - |
      if [ "${TRAVIS_OS_NAME}" == "osx" ]; then
          time wget http://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh
      else
          time wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
      fi
    - time bash miniconda.sh -b -p "$MINICONDA_DIR"
    - export PATH="$HOME/miniconda3/bin:$PATH"
    - conda install anaconda-client -q -y
    - anaconda login --username ${ANACONDA_USERNAME} --password ${ANACONDA_PASSWORD}
    - anaconda upload ${TRAVIS_BUILD_DIR}/wheelhouse/*
