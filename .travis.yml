env:
    global:
        - REPO_DIR=dask-ml
        # Commit from your-project that you want to build
        - BUILD_COMMIT=HEAD
        # pip dependencies to _build_ your project
        - BUILD_DEPENDS="Cython numpy setuptools_scm"
        # pip dependencies to _test_ your project.  Include any dependencies
        # that you need, that are also specified in BUILD_DEPENDS, this will be
        # a separate install.
        - TEST_DEPENDS="dask distributed numpy pandas scikit-learn scipy dask-glm dask-searchcv pytest pytest-mock"
        - PLAT=x86_64
        - UNICODE_WIDTH=32
        - ANACONDA_USERNAME=taugspurger
        - secure: "POUbS0wCtd2wyAUguEWW432/zyiMmeyujDYxERXcqK547DP8pJzqzIhwSdR8O6wv7rMY0fCUg2NHbinXYdvaYhNdvvFQ/y39J25iHYjk9whezrU9HuAYAi+lMHVYSL5gOKvTYYG+8T7Zt0ik+zI3tLLPCqinCVQU4t0S8nEUCpYnnyXdX72q99bugO957sB9h1X02Tek4L5DcSgS2I4unhsRP5LrKeRIcQw3bn2NC/Fm6FYAAmPLCbndLrcWP3RgNrwXPcQyNnI33YDIbPCUn2utkTQyN6Nct9Oxx1AtcFakltxrPHWqkdRnnGzpnHsmMgJACrTApGTKAn3DH/Kb/VOh34NayZEZTn3rNJU6r2vzay/FONaPZi/ZwxD10zfBKSGO1GBCh9tWR0EKLT8uWJ3BnNyOakofJdMafkuo7lQwbNGLJjs15P6NBUCsB83h3p/Df6kG6G6gIyYgzRtNrvniiK75KLTTYC0orl5lJrDMrJm6EjsJ7PjsJt5I7jTcUus2SGecm0sVs5/9JAuv0F0w68exdIl0RIXekEra9yxrwiaHsof/luIV2gGp0oW9HId9jkn4Y5J1m/F9bBVVnlT66dCjwcGIIYavjp0dVadiIjK6T4LX1aaCAjV1sNpAiZdPeH6duTNqz1k/ZBJuU8OWwHs8yqOERaouH7MYLko="

language: python
# The travis Python version is unrelated to the version we build and test
# with.  This is set with the MB_PYTHON_VERSION variable.
python: 3.5
sudo: required
dist: trusty
services: docker

matrix:
  exclude:
    # Exclude the default Python 3.5 build
    - python: 3.5
  include:
    # - os: linux
    #   env: MB_PYTHON_VERSION=2.7
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=2.7
    #     - UNICODE_WIDTH=16
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=2.7
    #     - PLAT=i686
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=2.7
    #     - PLAT=i686
    #     - UNICODE_WIDTH=16
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.5
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.5
    #     - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.6
    #     - PLAT=i686
    # - os: osx
    #   language: generic
    #   env:
    #     - MB_PYTHON_VERSION=2.7
    # - os: osx
    #   language: generic
    #   env:
    #     - MB_PYTHON_VERSION=3.5
    # - os: osx
    #   language: generic
    #   env:
    #     - MB_PYTHON_VERSION=3.6

before_install:
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - before_install

install:
    # Maybe get and clean and patch source
    - clean_code $REPO_DIR $BUILD_COMMIT
    - build_wheel $REPO_DIR $PLAT

script:
    - install_run $PLAT

after_success:
    # Upload wheels to Rackspace container
    - |
      if [ "${TRAVIS_OS_NAME}" == "osx" ]; then
          wget -q http://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh
      else
          wget -q http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
      fi
    - bash miniconda.sh -b -p "$HOME/miniconda3"
    - export PATH="$HOME/miniconda3/bin:$PATH"
    - conda install anaconda-client -q -y
    - anaconda login --username ${ANACONDA_USERNAME} --password ${ANACONDA_PASSWORD}
    - anaconda upload ${TRAVIS_BUILD_DIR}/wheelhouse/*
