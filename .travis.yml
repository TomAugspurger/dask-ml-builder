env:
    global:
        - REPO_DIR=dask-ml
        # Commit from your-project that you want to build
        - BUILD_COMMIT=HEAD
        # pip dependencies to _build_ your project
        - BUILD_DEPENDS="Cython numpy setuptools_scm"
        # pip dependencies to _test_ your project.  Include any dependencies
        # that you need, that are also specified in BUILD_DEPENDS, this will be
        # a separate install.
        - TEST_DEPENDS="dask distributed numpy pandas scikit-learn scipy dask-glm dask-searchcv pytest pytest-mock"
        - PLAT=x86_64
        - UNICODE_WIDTH=32
        - ANACONDA_USERNAME=taugspurger
        - secure: "BmE41cK7Ulit3yjU/DtkSCDVbcoYFWaPo5Fn0tBhXehn3UiFKFjIVIF3H5SLqUJSYKUxAKPmwVDqeKsNp7aW87Og7VytavpKQljtqC/IogpeN3BrY5LjEdLKhFtIpJNVrYqAARpiDieayTqx0eUq483GfhAHeJCiemdkRP1OPkkEyAWMLw1g9yzFL1ds2gwqTcpN79exdhlPtdq7kFLQtwxwajat4KGSwj9tLPHbrN6UxKben5CNX4v+gJc1tnlP+/NkUXjD/CAqMsbIxhvG7eCy3r2QLMI+yDqXf44ZJJLzXgRhv2RBqoYqkMQSC2+SqkzHnVykp212gPEaeD6RNHo/WqTgYx+lDsNEg1OsSTcvDKnTXsFv7rSGvIXLRyRhNb8U/CFDTcmya7qbERQmNY8UGxdi+rvkB3rRKpsOQ9zInjifMhgyTG5Gb1FwrGsvxIuKHlczikBQlKja8tz0Q0oNJhI4JfQ4FFxECF96v3+7uWaZz+zkf1t03tW9X99NBVCtClXiSeWb/Kb8bd43R2F+yBtyw5N2FlY7kWZYINM1ncgbys9kuBgdpbHqMYss/IMvKO7xPW5WGU9paP4Iva43SL46ntt371VPo5PR73Z5zWMEZVDjft3s6ASgkWSyxgVfRJL5Uzr7viD/Ofjwm45U1XCxWlj1F9SPC60UwsY="

language: python
# The travis Python version is unrelated to the version we build and test
# with.  This is set with the MB_PYTHON_VERSION variable.
python: 3.5
sudo: required
dist: trusty
services: docker

matrix:
  exclude:
    # Exclude the default Python 3.5 build
    - python: 3.5
  include:
    # - os: linux
    #   env: MB_PYTHON_VERSION=2.7
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=2.7
    #     - UNICODE_WIDTH=16
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=2.7
    #     - PLAT=i686
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=2.7
    #     - PLAT=i686
    #     - UNICODE_WIDTH=16
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.5
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.5
    #     - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.6
    #     - PLAT=i686
    # - os: osx
    #   language: generic
    #   env:
    #     - MB_PYTHON_VERSION=2.7
    # - os: osx
    #   language: generic
    #   env:
    #     - MB_PYTHON_VERSION=3.5
    # - os: osx
    #   language: generic
    #   env:
    #     - MB_PYTHON_VERSION=3.6

before_install:
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - before_install

install:
    # Maybe get and clean and patch source
    - clean_code $REPO_DIR $BUILD_COMMIT
    - build_wheel $REPO_DIR $PLAT

script:
    - install_run $PLAT

after_success:
    # Upload wheels to Rackspace container
    - |
      if [ "${TRAVIS_OS_NAME}" == "osx" ]; then
          wget -q http://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh
      else
          wget -q http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
      fi
    - bash miniconda.sh -b -p "$HOME/miniconda3"
    - export PATH="$HOME/miniconda3/bin:$PATH"
    - conda install anaconda-client -q -y
    - anaconda login --username ${ANACONDA_USERNAME} --password ${ANACONDA_PASSWORD}
    - anaconda upload ${TRAVIS_BUILD_DIR}/wheelhouse/*
