environment:
  global:
    REPO_DIR: dask-ml
    PACKAGE_NAME: dask_ml
    BUILD_COMMIT: v0.2.1
    BUILD_DEPENDS: "Cython numpy>=1.9.0 setuptools_scm"
    TEST_DEPENDS: "numpy>=1.9.0 dask distributed pandas scikit-learn scipy dask-glm dask-searchcv pytest"
    MY_UPLOAD_KEY:
      secure: LCEGs6KRiNBdsvxkpWVWvyiHr0nTVClFOBwmVVHTguDKbAzIavvxme/bPL/RFY2A

    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C %APPVEYOR_BUILD_FOLDER%\\multibuild\\ci\\appveyor\\windows_sdk.cmd"

  matrix:
    - PYTHON: "C:\\Miniconda"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "32"
    - PYTHON: "C:\\Miniconda-x64"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "64"
    - PYTHON: "C:\\Miniconda35"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "32"
    - PYTHON: "C:\\Miniconda35-x64"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "64"
    - PYTHON: "C:\\Miniconda36"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "32"
    - PYTHON: "C:\\Miniconda36-x64"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"


# We always use a 64-bit machine, but can build x86 distributions
# with the TARGET_ARCH variable.
platform:
    - x64

matrix:
    fast_finish: true

install:
    # Fetch submodules
    - git submodule update --init --recursive

    # Install miniconda
    - ps: .\\multibuild\\ci\\appveyor\\install.ps1
    - SET PATH=%PYTHON%;%PYTHON%\Scripts;%PYTHON%\Library\bin;%PATH%
    - conda config --add channels conda-forge
    - conda info

    # Check that we have the expected version and architecture for Python
    - python --version
    - python -c "import struct; print(struct.calcsize('P') * 8)"

build_script:
    # Install build requirements
    - conda install --yes %BUILD_DEPENDS%

    # build wheel:
    - cd %REPO_DIR%
    - git checkout %BUILD_COMMIT%
    - "%CMD_IN_ENV% python setup.py bdist_wheel"

test_script:
    # create test env
    - conda create --yes -n test_env python=%PYTHON_VERSION% %TEST_DEPENDS%
    - activate test_env

    # install from wheel
    - pip install --no-index --find-links dist/ %PACKAGE_NAME%

    # run test from installed wheel.
    - cd ..
    # The test try to run cython/msvc so CMD_IN_ENV is needed
    - "%CMD_IN_ENV% python -c \"import dask_ml; import dask_ml.utils\""

artifacts:
    - path: "%REPO_DIR%\\dist\\*"

on_success:
  - conda install anaconda-client -q -y
  - anaconda -t %MY_UPLOAD_KEY% upload -u TomAugspurger %REPO_DIR%\\dist\\*
